name: Menteetor-FE
on: 
  push:
    branches: [main] # main 브랜치에 push가 발생할 때
  pull_request:
    branches: [main] # main 브랜치에 pull_request가 발생할 때

  # 수동으로 해당 action을 실행하고 싶을때 필요한 옵션
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker build & push to Docker hub
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest .

      - name: SSH into EC2 and deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Exit script on any error
            set -e

            # Docker Hub에서 로그아웃 (이미 로그아웃 상태일 경우 무시)
            docker logout || true

            # Docker Hub에 다시 로그인
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            # Docker Compose를 사용하여 기존 컨테이너 중지 및 제거
            docker-compose -f /home/ubuntu/compose_f/docker-compose.yml down --rmi all --remove-orphans
            docker network prune -f

            # 최신 이미지를 Docker Hub에서 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest

            # Docker Compose를 사용하여 컨테이너 시작
            docker-compose -f /home/ubuntu/compose_f/docker-compose.yml up -d

            # (옵션) 최신 상태 로그 확인
            # docker-compose -f /home/ubuntu/compose_f/docker-compose.yml logs




      
    
   

    
    

  


    
